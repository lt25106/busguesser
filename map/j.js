async function main(){const r=await fetch("https://data.busrouter.sg/v1/routes.geojson").then(i=>i.json()),s=await fetch("https://data.busrouter.sg/v1/services.json").then(i=>i.json()),e=await fetch("https://data.busrouter.sg/v1/stops.geojson").then(i=>i.json()),a=Math.floor(Math.random()*e.features.length),c=Math.floor(Math.random()*e.features.length),o={number:e.features[a].id,location:e.features[a].geometry.coordinates,name:e.features[a].properties.name,services:e.features[a].properties.services,road:e.features[a].properties.road},p={number:e.features[c].id,location:e.features[c].geometry.coordinates,name:e.features[c].properties.name,services:e.features[c].properties.services,road:e.features[c].properties.road};o.services.some(i=>p.services.includes(i))&&location.reload();const n=L.map("map").setView([1.3521,103.8198],12);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png").addTo(n);const b=L.circleMarker([o.location[1],o.location[0]],{color:"red"}).addTo(n),v=L.circleMarker([p.location[1],p.location[0]],{color:"red"}).addTo(n);b.bindPopup(`<div>${o.name}<br>${showbuses(o.services)}</div>`),v.bindPopup(`<div>${p.name}<br>${showbuses(p.services)}</div>`);let M,g=[b,v];b.on("popupopen",l),v.on("popupopen",l);function l(){document.querySelectorAll("button").forEach(t=>{let h;const u=`hsl(${Math.random()*360},100%,50%)`;t.addEventListener("mouseover",()=>{M=L.geoJSON(k(t.textContent),{style:{color:u}}).addTo(n),h=!1}),t.addEventListener("mouseout",()=>{h||n.removeLayer(M)}),t.addEventListener("click",()=>{h=!0,(s[t.textContent].routes[1]?s[t.textContent].routes[0].concat(s[t.textContent].routes[1]):s[t.textContent].routes[0]).forEach(f=>{if(f!=o.number&&f!=p.number){const y={name:e.features.filter(m=>m.id==f)[0].properties.name,services:e.features.filter(m=>m.id==f)[0].properties.services,location:e.features.filter(m=>m.id==f)[0].geometry.coordinates},w=L.circleMarker([y.location[1],y.location[0]],{color:u}).addTo(n);w.bindPopup(`${y.name}<br>${showbuses(y.services)}</div>`),w.on("popupopen",l),w.on("popupopen",m=>{g.push(m.target),n.eachLayer(d=>{if(d instanceof L.CircleMarker){const P={location:[d.getLatLng().lng,d.getLatLng().lat]}}}),n.eachLayer(d=>{d instanceof L.CircleMarker&&!g.includes(d)&&n.removeLayer(d),d!=m.target&&d.unbindPopup()})})}}),n.closePopup()})})}function k(i){const t=r.features.filter(u=>u.properties.number==i);return t.length==0?void 0:{type:"Feature",geometry:{type:"MultiLineString",coordinates:t.map(u=>u.geometry.coordinates)},properties:{}}}}function showbuses(r){let s="";return r.forEach(e=>{s+=`<button>${e}</button>`}),s}function closestPointOnLine(r,s){let e,a=1/0,c=-1;for(let o=0;o<r.length-1;o++){const[p,x]=r[o],[n,b]=r[o+1],[v,M]=s,g=n-p,l=b-x,k=v-p,i=M-x;let t=(k*g+i*l)/(g*g+l*l);t<0?t=0:t>1&&(t=1);const h=p+t*g,u=x+t*l,C=v-h,f=M-u,y=Math.sqrt(C*C+f*f);y<a&&(a=y,e=[h,u],c=o)}return{point:e,segmentIndex:c}}function degreetokilometer(r){return 6378*Math.sqrt(2*(1-Math.cos(r*Math.PI/180)))}function opposite(r,s){const e=[r.location,s.location],a=[r.road,s.road],c=[e[0][0]-e[1][0],e[0][1]-e[1][1]],o=Math.sqrt(degreetokilometer(c[0])**2+degreetokilometer(c[1])**2);return a[0]==a[1]&&o<.06}main();
