async function main(){const[f,i,e]=await Promise.all([fetch("https://data.busrouter.sg/v1/routes.geojson").then(t=>t.json()),fetch("https://data.busrouter.sg/v1/services.json").then(t=>t.json()),fetch("https://data.busrouter.sg/v1/stops.geojson").then(t=>t.json())]),p=Math.floor(Math.random()*e.features.length),u=Math.floor(Math.random()*e.features.length),s={number:e.features[p].id,location:e.features[p].geometry.coordinates,name:e.features[p].properties.name,services:e.features[p].properties.services,road:e.features[p].properties.road},n={number:e.features[u].id,location:e.features[u].geometry.coordinates,name:e.features[u].properties.name,services:e.features[u].properties.services,road:e.features[u].properties.road};s.services.some(t=>n.services.includes(t))&&location.reload();const r=L.map("map").setView([1.3521,103.8198],12);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png").addTo(r);const b=L.circleMarker([s.location[1],s.location[0]],{color:"red"}).addTo(r),h=L.circleMarker([n.location[1],n.location[0]],{color:"red"}).addTo(r);b.bindPopup(`<div>${s.name}<br>${showbuses(s.services)}</div>`),h.bindPopup(`<div>${n.name}<br>${showbuses(n.services)}</div>`);let g,v,m=[b,h];b.on("popupopen",x),h.on("popupopen",x);function x(){document.querySelectorAll("button").forEach(o=>{let y;const a=`hsl(${Math.random()*360},100%,50%)`;o.addEventListener("mouseover",()=>{g=L.geoJSON(k(o.textContent),{style:{color:a}}).addTo(r),v=o.textContent,y=!1}),o.addEventListener("mouseout",()=>{y||r.removeLayer(g)}),o.addEventListener("click",()=>{y=!0,(i[o.textContent].routes[1]?i[o.textContent].routes[0].concat(i[o.textContent].routes[1]):i[o.textContent].routes[0]).forEach(l=>{if(l!=s.number&&l!=n.number){const C={name:e.features.filter(d=>d.id==l)[0].properties.name,services:e.features.filter(d=>d.id==l)[0].properties.services,location:e.features.filter(d=>d.id==l)[0].geometry.coordinates},$=L.circleMarker([C.location[1],C.location[0]],{color:a}).addTo(r);$.bindPopup(`${C.name}<br>${showbuses(C.services)}</div>`),$.on("popupopen",x),$.on("popupopen",d=>{m.push(d.target),r.eachLayer(c=>{c instanceof L.CircleMarker&&!m.includes(c)&&r.removeLayer(c),c!=d.target&&c.unbindPopup()}),r.eachLayer(c=>{if(c instanceof L.CircleMarker){g.eachLayer(j=>{console.log(j.getLatLngs())});const w=closestPointOnLine(g,[c.getLatLng().lng,c.getLatLng().lat])}})})}}),r.closePopup()})})}function k(t){const o=f.features.filter(a=>a.properties.number==t);return o.length==0?void 0:{type:"Feature",geometry:{type:"MultiLineString",coordinates:o.map(a=>a.geometry.coordinates)},properties:{}}}}function showbuses(f){let i="";return f.forEach(e=>{i+=`<button>${e}</button>`}),i}function closestPointOnLine(f,i){let e,p=1/0,u=-1;for(let s=0;s<f.length-1;s++){const[n,M]=f[s],[r,b]=f[s+1],[h,g]=i,v=r-n,m=b-M,x=h-n,k=g-M;let t=(x*v+k*m)/(v*v+m*m);t<0?t=0:t>1&&(t=1);const o=n+t*v,y=M+t*m,a=h-o,P=g-y,l=Math.sqrt(a*a+P*P);l<p&&(p=l,e=[o,y],u=s)}return{point:e,segmentIndex:u}}main();
