async function main(){const f=await fetch("https://data.busrouter.sg/v1/routes.geojson").then(s=>s.json()),i=await fetch("https://data.busrouter.sg/v1/services.json").then(s=>s.json()),e=await fetch("https://data.busrouter.sg/v1/stops.geojson").then(s=>s.json()),c=Math.floor(Math.random()*e.features.length),p=Math.floor(Math.random()*e.features.length),o={number:e.features[c].id,location:e.features[c].geometry.coordinates,name:e.features[c].properties.name,services:e.features[c].properties.services,road:e.features[c].properties.road},n={number:e.features[p].id,location:e.features[p].geometry.coordinates,name:e.features[p].properties.name,services:e.features[p].properties.services,road:e.features[p].properties.road};o.services.some(s=>n.services.includes(s))&&location.reload();const r=L.map("map").setView([1.3521,103.8198],12);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png").addTo(r);const h=L.circleMarker([o.location[1],o.location[0]],{color:"red"}).addTo(r),v=L.circleMarker([n.location[1],n.location[0]],{color:"red"}).addTo(r);h.bindPopup(`<div>${o.name}<br>${showbuses(o.services)}</div>`),v.bindPopup(`<div>${n.name}<br>${showbuses(n.services)}</div>`);let b,m=[h,v];h.on("popupopen",u),v.on("popupopen",u);function u(){document.querySelectorAll("button").forEach(t=>{let g;const a=`hsl(${Math.random()*360},100%,50%)`;t.addEventListener("mouseover",()=>{b=L.geoJSON(k(t.textContent),{style:{color:a}}).addTo(r),g=!1}),t.addEventListener("mouseout",()=>{g||r.removeLayer(b)}),t.addEventListener("click",()=>{g=!0,(i[t.textContent].routes[1]?i[t.textContent].routes[0].concat(i[t.textContent].routes[1]):i[t.textContent].routes[0]).forEach(l=>{if(l!=o.number&&l!=n.number){const y={name:e.features.filter(d=>d.id==l)[0].properties.name,services:e.features.filter(d=>d.id==l)[0].properties.services,location:e.features.filter(d=>d.id==l)[0].geometry.coordinates},w=L.circleMarker([y.location[1],y.location[0]],{color:a}).addTo(r);w.bindPopup(`${y.name}<br>${showbuses(y.services)}</div>`),w.on("popupopen",u),w.on("popupopen",d=>{m.push(d.target),r.eachLayer(x=>{x instanceof L.CircleMarker&&!m.includes(x)&&r.removeLayer(x),x!=d.target&&x.unbindPopup()})})}}),r.closePopup()})})}function k(s){const t=f.features.filter(a=>a.properties.number==s);return t.length==0?void 0:{type:"Feature",geometry:{type:"MultiLineString",coordinates:t.map(a=>a.geometry.coordinates)},properties:{}}}}function showbuses(f){let i="";return f.forEach(e=>{i+=`<button>${e}</button>`}),i}function closestPointOnLine(f,i){let e,c=1/0,p=-1;for(let o=0;o<f.length-1;o++){const[n,M]=f[o],[r,h]=f[o+1],[v,b]=i,m=r-n,u=h-M,k=v-n,s=b-M;let t=(k*m+s*u)/(m*m+u*u);t<0?t=0:t>1&&(t=1);const g=n+t*m,a=M+t*u,C=v-g,l=b-a,y=Math.sqrt(C*C+l*l);y<c&&(c=y,e=[g,a],p=o)}return{point:e,segmentIndex:p}}main();
