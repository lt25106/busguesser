async function E(){const l=await fetch("https://data.busrouter.sg/v1/routes.geojson").then(s=>s.json()),a=await fetch("https://data.busrouter.sg/v1/services.json").then(s=>s.json()),e=await fetch("https://data.busrouter.sg/v1/stops.geojson").then(s=>s.json()),d=Math.floor(Math.random()*e.features.length),m=Math.floor(Math.random()*e.features.length),o={number:e.features[d].id,location:e.features[d].geometry.coordinates,name:e.features[d].properties.name,services:e.features[d].properties.services},n={number:e.features[m].id,location:e.features[m].geometry.coordinates,name:e.features[m].properties.name,services:e.features[m].properties.services};o.services.some(s=>n.services.includes(s))&&location.reload();const r=L.map("map").setView([1.3521,103.8198],12);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png").addTo(r);const LL=L.circleMarker([o.location[1],o.location[0]],{color:"red"}).addTo(r),y=L.circleMarker([n.location[1],n.location[0]],{color:"red"}).addTo(r);LL.bindPopup(`
    <div>${o.name}<br>${O(o.services)}</div>
  `),y.bindPopup(`
    <div>${n.name}<br>${O(n.services)}</div>
  `);let h,g=[LL,y];LL.on("popupopen",u),y.on("popupopen",u);function u(){document.querySelectorAll("button").forEach(t=>{let f;const c=`hsl(${Math.random()*360},100%,50%)`;t.addEventListener("mouseover",()=>{h=L.geoJSON(k(t.textContent),{style:{color:c}}).addTo(r),f=!1}),t.addEventListener("mouseout",()=>{f||r.removeLayer(h)}),t.addEventListener("click",()=>{f=!0,(a[t.textContent].routes[1]?a[t.textContent].routes[0].concat(a[t.textContent].routes[1]):a[t.textContent].routes[0]).forEach(p=>{if(p!=o.number&&p!=n.number){const b={name:e.features.filter(i=>i.id==p)[0].properties.name,services:e.features.filter(i=>i.id==p)[0].properties.services,location:e.features.filter(i=>i.id==p)[0].geometry.coordinates},S=L.circleMarker([b.location[1],b.location[0]],{color:c}).addTo(r);S.bindPopup(`
              <div>${b.name}<br>${O(b.services)}</div>
            `),S.on("popupopen",u),S.on("popupopen",i=>{g.push(i.target),r.eachLayer(x=>{x instanceof L.CircleMarker&&!g.includes(x)&&r.removeLayer(x),x!=i.target&&x.unbindPopup()});const w=h.toGeoJSON().features[0].geometry.coordinates,$=[i.target.getLatLng().lng,i.target.getLatLng().lat],J=P(w.flat(),$),F=P(w.flat(),o.location),j=w[F.segmentIndex];console.log(j)})}}),r.closePopup()})})}function k(s){const t=l.features.filter(c=>c.properties.number==s);return t.length==0?void 0:{type:"Feature",geometry:{type:"MultiLineString",coordinates:t.map(c=>c.geometry.coordinates)},properties:{}}}}function O(l){let a="";return l.forEach(e=>{a+=`<button>${e}</button>`}),a}function P(l,a){let e,d=1/0,m=-1;for(let o=0;o<l.length-1;o++){const[n,M]=l[o],[r,L]=l[o+1],[y,h]=a,g=r-n,u=L-M,k=y-n,s=h-M;let t=(k*g+s*u)/(g*g+u*u);t<0?t=0:t>1&&(t=1);const f=n+t*g,c=M+t*u,C=y-f,p=h-c,b=Math.sqrt(C*C+p*p);b<d&&(d=b,e=[f,c],m=o)}return{point:e,segmentIndex:m}}E();
