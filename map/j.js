async function main(){const d=await fetch("https://data.busrouter.sg/v1/routes.geojson").then(s=>s.json()),i=await fetch("https://data.busrouter.sg/v1/services.json").then(s=>s.json()),e=await fetch("https://data.busrouter.sg/v1/stops.geojson").then(s=>s.json()),l=Math.floor(Math.random()*e.features.length),m=Math.floor(Math.random()*e.features.length),o={number:e.features[l].id,location:e.features[l].geometry.coordinates,name:e.features[l].properties.name,services:e.features[l].properties.services},n={number:e.features[m].id,location:e.features[m].geometry.coordinates,name:e.features[m].properties.name,services:e.features[m].properties.services};o.services.some(s=>n.services.includes(s))&&location.reload();const r=L.map("map").setView([1.3521,103.8198],12);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png").addTo(r);const h=L.circleMarker([o.location[1],o.location[0]],{color:"red"}).addTo(r),y=L.circleMarker([n.location[1],n.location[0]],{color:"red"}).addTo(r);h.bindPopup(`<div>${o.name}<br>${showbuses(o.services)}</div>`),y.bindPopup(`<div>${n.name}<br>${showbuses(n.services)}</div>`);let b,f=[h,y];h.on("popupopen",c),y.on("popupopen",c);function c(){document.querySelectorAll("button").forEach(t=>{let g;const a=`hsl(${Math.random()*360},100%,50%)`;t.addEventListener("mouseover",()=>{b=L.geoJSON(k(t.textContent),{style:{color:a}}).addTo(r),g=!1}),t.addEventListener("mouseout",()=>{g||r.removeLayer(b)}),t.addEventListener("click",()=>{g=!0,(i[t.textContent].routes[1]?i[t.textContent].routes[0].concat(i[t.textContent].routes[1]):i[t.textContent].routes[0]).forEach(p=>{if(p!=o.number&&p!=n.number){const v={name:e.features.filter(u=>u.id==p)[0].properties.name,services:e.features.filter(u=>u.id==p)[0].properties.services,location:e.features.filter(u=>u.id==p)[0].geometry.coordinates},w=L.circleMarker([v.location[1],v.location[0]],{color:a}).addTo(r);w.bindPopup(`${v.name}<br>${showbuses(v.services)}</div>`),w.on("popopen",c),w.on("popupopen",u=>{f.push(u.target),r.eachLayer(x=>{x instanceof L.CircleMarker&&!f.includes(x)&&r.removeLayer(x),x!=u.target&&x.unbindPopup()})})}}),r.closePopup()})})}function k(s){const t=d.features.filter(a=>a.properties.number==s);return t.length==0?void 0:{type:"Feature",geometry:{type:"MultiLineString",coordinates:t.map(a=>a.geometry.coordinates)},properties:{}}}}function showbuses(d){let i="";return d.forEach(e=>{i+=`<button>${e}</button>`}),i}function closestPointOnLine(d,i){let e,l=1/0,m=-1;for(let o=0;o<d.length-1;o++){const[n,M]=d[o],[r,h]=d[o+1],[y,b]=i,f=r-n,c=h-M,k=y-n,s=b-M;let t=(k*f+s*c)/(f*f+c*c);t<0?t=0:t>1&&(t=1);const g=n+t*f,a=M+t*c,C=y-g,p=b-a,v=Math.sqrt(C*C+p*p);v<l&&(l=v,e=[g,a],m=o)}return{point:e,segmentIndex:m}}main();
