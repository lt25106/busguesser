async function main(){const l=await fetch("https://data.busrouter.sg/v1/routes.geojson").then(r=>r.json()),i=await fetch("https://data.busrouter.sg/v1/services.json").then(r=>r.json()),e=await fetch("https://data.busrouter.sg/v1/stops.geojson").then(r=>r.json()),m=Math.floor(Math.random()*e.features.length),a=Math.floor(Math.random()*e.features.length),o={number:e.features[m].id,location:e.features[m].geometry.coordinates,name:e.features[m].properties.name,services:e.features[m].properties.services,road:e.features[a].properties.road},n={number:e.features[a].id,location:e.features[a].geometry.coordinates,name:e.features[a].properties.name,services:e.features[a].properties.services,road:e.features[a].properties.road};o.services.some(r=>n.services.includes(r))&&location.reload();const s=L.map("map").setView([1.3521,103.8198],12);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png").addTo(s);const h=L.circleMarker([o.location[1],o.location[0]],{color:"red"}).addTo(s),y=L.circleMarker([n.location[1],n.location[0]],{color:"red"}).addTo(s);h.bindPopup(`<div>${o.name}<br>${showbuses(o.services)}</div>`),y.bindPopup(`<div>${n.name}<br>${showbuses(n.services)}</div>`);let b,f=[h,y];h.on("popupopen",p),y.on("popupopen",p);function p(){document.querySelectorAll("button").forEach(t=>{let g;const c=`hsl(${Math.random()*360},100%,50%)`;t.addEventListener("mouseover",()=>{b=L.geoJSON(k(t.textContent),{style:{color:c}}).addTo(s),g=!1}),t.addEventListener("mouseout",()=>{g||s.removeLayer(b)}),t.addEventListener("click",()=>{g=!0,(i[t.textContent].routes[1]?i[t.textContent].routes[0].concat(i[t.textContent].routes[1]):i[t.textContent].routes[0]).forEach(u=>{if(u!=o.number&&u!=n.number){const v={name:e.features.filter(d=>d.id==u)[0].properties.name,services:e.features.filter(d=>d.id==u)[0].properties.services,location:e.features.filter(d=>d.id==u)[0].geometry.coordinates},w=L.circleMarker([v.location[1],v.location[0]],{color:c}).addTo(s);w.bindPopup(`${v.name}<br>${showbuses(v.services)}</div>`),w.on("popopen",p),w.on("popupopen",d=>{f.push(d.target),s.eachLayer(x=>{x instanceof L.CircleMarker&&!f.includes(x)&&s.removeLayer(x),x!=d.target&&x.unbindPopup()})})}}),s.closePopup()})})}function k(r){const t=l.features.filter(c=>c.properties.number==r);return t.length==0?void 0:{type:"Feature",geometry:{type:"MultiLineString",coordinates:t.map(c=>c.geometry.coordinates)},properties:{}}}}function showbuses(l){let i="";return l.forEach(e=>{i+=`<button>${e}</button>`}),i}function closestPointOnLine(l,i){let e,m=1/0,a=-1;for(let o=0;o<l.length-1;o++){const[n,M]=l[o],[s,h]=l[o+1],[y,b]=i,f=s-n,p=h-M,k=y-n,r=b-M;let t=(k*f+r*p)/(f*f+p*p);t<0?t=0:t>1&&(t=1);const g=n+t*f,c=M+t*p,C=y-g,u=b-c,v=Math.sqrt(C*C+u*u);v<m&&(m=v,e=[g,c],a=o)}return{point:e,segmentIndex:a}}main();
